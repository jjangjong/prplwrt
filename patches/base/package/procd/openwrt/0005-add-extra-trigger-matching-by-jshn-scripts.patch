Index: procd-2017-10-10-7c9aa7c3/service/trigger.c
===================================================================
--- procd-2017-10-10-7c9aa7c3.orig/service/trigger.c
+++ procd-2017-10-10-7c9aa7c3/service/trigger.c
@@ -64,6 +64,74 @@ static const char* rule_handle_var(struc
   return NULL;
 }
 
+static int _msg_find_member(struct blob_attr *vars, const char *name)
+{
+  struct blob_attr *cur;
+  int rem;
+
+  blobmsg_for_each_attr(cur, vars, rem) {
+    if (strcmp(blobmsg_data(cur), name) == 0) {
+      return 1;
+    }
+  }
+
+  return 0;
+}
+
+static struct blob_attr* _msg_find_var(struct json_script_ctx *ctx, struct blob_attr *vars,
+                                  const char *name, int type)
+{
+  struct blob_attr *cur;
+  int rem;
+
+  blobmsg_for_each_attr(cur, vars, rem) {
+    if (type && blobmsg_type(cur) != type)
+      continue;
+
+    if (strcmp(blobmsg_name(cur), name) != 0)
+      continue;
+
+    return cur;
+  }
+
+  return NULL;
+}
+
+static int rule_handle_expr(struct json_script_ctx *ctx, const char *name,
+        struct blob_attr *expr, struct blob_attr *vars)
+{
+  if (!strcmp(name, "array_contains")) {
+    struct blob_attr *cur;
+    int rem;
+    int i = 0;
+    const char *name = name;
+    struct blob_attr *var = NULL;
+    blobmsg_for_each_attr(cur, expr, rem) {
+      char *j;
+      switch (i++) {
+        case 0:
+          continue;
+        case 1:
+          if (blobmsg_type(cur) != BLOBMSG_TYPE_STRING)
+            return -1;
+          var = _msg_find_var(ctx, vars, blobmsg_data(cur), BLOBMSG_TYPE_ARRAY);
+          if (!var)
+            return 0;
+          j = blobmsg_format_json(cur, true);
+          free(j);
+          continue;
+        case 2:
+          if (blobmsg_type(cur) != BLOBMSG_TYPE_STRING)
+            return -1;
+          blobmsg_format_json(cur, false);
+          return _msg_find_member(var, blobmsg_data(cur));
+      }
+    }
+    return -1;
+  }
+  return -1;
+}
+
 static struct json_script_file *
 rule_load_script(struct json_script_ctx *ctx, const char *name)
 {
@@ -218,6 +286,7 @@ static struct trigger* _trigger_add(char
   t->jctx.handle_var = rule_handle_var,
   t->jctx.handle_error = rule_handle_error,
   t->jctx.handle_command = rule_handle_command,
+  t->jctx.handle_expr = rule_handle_expr,
   t->jctx.handle_file = rule_load_script,
 
   strcpy(t->type, type);