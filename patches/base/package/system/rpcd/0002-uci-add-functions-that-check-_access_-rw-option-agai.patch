From 1c51906f1979e0eaa08589c44d07ff3211937a36 Mon Sep 17 00:00:00 2001
From: Denis Osvald <denis.osvald@sartura.hr>
Date: Fri, 8 Jul 2016 18:10:28 +0200
Subject: [PATCH 2/4] uci: add functions that check _access_[rw] option against
 username

Signed-off-by: Denis Osvald <denis.osvald@sartura.hr>
---
 uci.c | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)

diff --git a/uci.c b/uci.c
index 72ae5a6..08ad3de 100644
--- a/uci.c
+++ b/uci.c
@@ -26,6 +26,8 @@
 #include <rpcd/exec.h>
 #include <rpcd/session.h>
 
+#define ACCESS_PREFIX "_access_"
+
 static struct blob_buf buf;
 static struct uci_context *cursor;
 static struct uloop_timeout apply_timer;
@@ -224,6 +226,58 @@ rpc_uci_set_savedir(struct blob_attr *sid)
 	uci_set_savedir(cursor, path);
 }
 
+static bool rpc_uci_option_username_in_list(const char *username, struct uci_option *o)
+{
+	struct uci_element *e;
+
+	switch (o->type) {
+	case UCI_TYPE_STRING:
+		return !strcmp(username, o->v.string);
+		break;
+
+	case UCI_TYPE_LIST:
+		uci_foreach_element(&o->v.list, e)
+			if (!strcmp(username, e->name))
+				return true;
+		return false;
+
+	default:
+		break;
+	}
+
+	return false;
+}
+
+static bool rpc_uci_section_access(const char *username, struct uci_section *s, char rw)
+{
+	struct uci_element *e;
+	// NULL username = don't do checking
+	if (!username)
+		return true;
+
+	uci_foreach_element(&s->options, e)
+		if (!strncmp(ACCESS_PREFIX, e->name, (sizeof ACCESS_PREFIX) - 1) && e->name[(sizeof ACCESS_PREFIX) - 1] == rw)
+			return rpc_uci_option_username_in_list(username, uci_to_option(e));
+
+	// there was no access list, allow access
+	return true;
+}
+
+static bool rpc_uci_option_access(const char *username, struct uci_option *o, char rw)
+{
+	// NULL username = don't do checking
+	if (!username)
+		return true;
+
+	if (!strncmp(ACCESS_PREFIX, o->e.name, (sizeof ACCESS_PREFIX) - 1)) {
+		// access list can only be seen by those in it
+		return rpc_uci_option_username_in_list(username, o);
+	}
+
+	// other options can be seen if we have read access to that section
+	return rpc_uci_section_access(username, o->section, rw);
+}
+
 /*
  * Test read access to given config. If the passed "sid" blob attribute pointer
  * is NULL then the precedure was not invoked through the ubus-rpc so we do not
-- 
2.9.0

